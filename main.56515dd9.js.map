{"version":3,"sources":["scripts/main.js"],"names":["board","previousState","gameField","document","querySelector","button","gameScore","messageLose","messageWin","message","querySelectorAll","cellsInRow","scoreCount","randomPlace","checkEmptyPlace","randomRowIdx","getRandomNum","randomColumnIdx","number","getRandomValue","setValue","i","includes","startGame","map","arr","innerText","Math","floor","random","j","htmlCell","rows","cells","jsCell","classList","value","add","remove","replace","isLose","move","array","check","newArray","filter","num","length","push","arraysEqual","a","b","moveLeft","moveRight","reverse","moveUp","moveDown","onclick","addEventListener","e","key","handleTouchStart","handleTouchMove","xDown","yDown","evt","firstTouch","touches","clientX","clientY","xUp","yUp","xDiff","yDiff","abs"],"mappings":"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","file":"main.56515dd9.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst gameField = document.querySelector('tbody');\nconst button = document.querySelector('.button');\nconst gameScore = document.querySelector('.game-score');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst message = document.querySelectorAll('.message');\n\nconst cellsInRow = 4;\nlet scoreCount = 0;\nlet board;\nlet previousState;\n\nbutton.onclick = () => {\n  button.classList.replace('start', 'restart');\n  button.innerText = 'Restart';\n\n  for (const text of message) {\n    text.classList.add('hidden');\n  }\n\n  startGame();\n};\n\nfunction randomPlace() {\n  while (checkEmptyPlace()) {\n    const randomRowIdx = getRandomNum();\n    const randomColumnIdx = getRandomNum();\n\n    if (board[randomRowIdx][randomColumnIdx] === 0) {\n      const number = getRandomValue();\n\n      board[randomRowIdx][randomColumnIdx] = number;\n      break;\n    }\n  }\n\n  setValue();\n};\n\nfunction checkEmptyPlace() {\n  for (let i = 0; i < cellsInRow; i++) {\n    if (board[i].includes(0)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction startGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  previousState = board.map(arr => [...arr]);\n\n  scoreCount = 0;\n  gameScore.innerText = scoreCount;\n\n  randomPlace();\n  randomPlace();\n};\n\nfunction getRandomNum() {\n  return Math.floor(Math.random() * cellsInRow);\n};\n\nfunction getRandomValue() {\n  return Math.random() > 0.9 ? 4 : 2;\n};\n\nfunction setValue() {\n  for (let i = 0; i < cellsInRow; i++) {\n    for (let j = 0; j < cellsInRow; j++) {\n      const htmlCell = gameField.rows[i].cells[j];\n      const jsCell = board[i][j];\n\n      htmlCell.innerText = '';\n      htmlCell.classList.value = 'field-cell';\n\n      if (jsCell > 0) {\n        htmlCell.innerText = jsCell;\n        htmlCell.classList.add(`field-cell--${jsCell}`);\n      }\n\n      if (jsCell === 2048) {\n        messageWin.classList.remove('hidden');\n        button.classList.replace('restart', 'start');\n        button.innerText = 'Start';\n      }\n    }\n  };\n\n  if (isLose()) {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nfunction move(array) {\n  let check = 0;\n  let newArray = array.filter(num => num !== 0);\n\n  for (let i = 0; i < newArray.length - 1; i++) {\n    if (newArray[i] === newArray[i + 1]) {\n      check++;\n      newArray[i] *= 2;\n      newArray[i + 1] = 0;\n      scoreCount += newArray[i];\n      gameScore.innerText = scoreCount;\n    }\n  }\n\n  newArray = newArray.filter(num => num !== 0);\n\n  while (newArray.length < cellsInRow) {\n    newArray.push(0);\n  }\n\n  if (check === 0 && !checkEmptyPlace(array)) {\n    return array;\n  }\n\n  return newArray;\n};\n\nfunction arraysEqual(a, b) {\n  for (let i = 0; i < a.length; i++) {\n    for (let j = 0; j < a[i].length; j++) {\n      if (a[i][j] !== b[i][j]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction moveLeft() {\n  for (let i = 0; i < cellsInRow; i++) {\n    let array = board[i];\n\n    array = move(array);\n    board[i] = array;\n  }\n\n  if (!arraysEqual(previousState, board)) {\n    randomPlace();\n    previousState = board.map(arr => [...arr]);\n  }\n}\n\nfunction moveRight() {\n  for (let i = 0; i < cellsInRow; i++) {\n    let array = board[i].reverse();\n\n    array = move(array).reverse();\n    board[i] = array;\n  }\n\n  if (!arraysEqual(previousState, board)) {\n    randomPlace();\n    previousState = board.map(arr => [...arr]);\n  }\n};\n\nfunction moveUp() {\n  for (let i = 0; i < cellsInRow; i++) {\n    let array = [board[0][i], board[1][i], board[2][i], board[3][i]];\n\n    array = move(array);\n\n    for (let j = 0; j < cellsInRow; j++) {\n      board[j][i] = array[j];\n    }\n  }\n\n  if (!arraysEqual(previousState, board)) {\n    randomPlace();\n    previousState = board.map(arr => [...arr]);\n  }\n}\n\nfunction moveDown() {\n  for (let i = 0; i < cellsInRow; i++) {\n    let array = [board[0][i], board[1][i], board[2][i], board[3][i]].reverse();\n\n    array = move(array).reverse();\n\n    for (let j = 0; j < cellsInRow; j++) {\n      board[j][i] = array[j];\n    }\n  }\n\n  if (!arraysEqual(previousState, board)) {\n    randomPlace();\n    previousState = board.map(arr => [...arr]);\n  }\n}\n\nfunction isLose() {\n  if (checkEmptyPlace()) {\n    return false;\n  }\n\n  for (let i = 0; i < cellsInRow; i++) {\n    for (let j = 0; j < cellsInRow - 1; j++) {\n      if (board[i][j] === board[i][j + 1] || board[j][i] === board[j + 1][i]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\ndocument.addEventListener('keydown', function(e) {\n  switch (e.key) {\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n    case 'ArrowRight':\n      moveRight();\n      break;\n    case 'ArrowUp':\n      moveUp();\n      break;\n    case 'ArrowDown':\n      moveDown();\n      break;\n  }\n});\n\ndocument.addEventListener('touchstart', handleTouchStart, false);\ndocument.addEventListener('touchmove', handleTouchMove, false);\n\nlet xDown = null;\nlet yDown = null;\n\nfunction handleTouchStart(evt) {\n  const firstTouch = evt.touches[0];\n\n  xDown = firstTouch.clientX;\n  yDown = firstTouch.clientY;\n}\n\nfunction handleTouchMove(evt) {\n  if (!xDown || !yDown) {\n    return;\n  }\n\n  const xUp = evt.touches[0].clientX;\n  const yUp = evt.touches[0].clientY;\n\n  const xDiff = xDown - xUp;\n  const yDiff = yDown - yUp;\n\n  if (Math.abs(xDiff) > Math.abs(yDiff)) {\n    if (xDiff > 0) {\n      moveLeft();\n    } else {\n      moveRight();\n    }\n  } else {\n    if (yDiff > 0) {\n      moveUp();\n    } else {\n      moveDown();\n    }\n  }\n\n  xDown = null;\n  yDown = null;\n}\n"]}